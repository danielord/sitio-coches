generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(cuid())
  email             String   @unique
  password          String
  firstName         String
  lastName          String
  phone             String?
  address           String?
  city              String?
  state             String?
  zipCode           String?
  avatar            String?
  userType          UserType @default(BUYER)
  emailNotifications Boolean @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  cars              Car[]
  favorites         Favorite[]
  messages          Message[]
  
  @@map("users")
}

model Car {
  id           String   @id @default(cuid())
  marca        String
  modelo       String
  anio         Int
  precio       Float
  kilometraje  Int
  combustible  String
  imagen       String?
  descripcion  String
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  favorites    Favorite[]
  
  @@map("cars")
}

model Favorite {
  id     String @id @default(cuid())
  userId String
  carId  String
  
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  car    Car  @relation(fields: [carId], references: [id], onDelete: Cascade)
  
  @@unique([userId, carId])
  @@map("favorites")
}

model Message {
  id        String   @id @default(cuid())
  content   String
  userId    String
  carId     String?
  createdAt DateTime @default(now())
  
  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("messages")
}

model EmailNotification {
  id        String   @id @default(cuid())
  email     String
  subject   String
  content   String
  sent      Boolean  @default(false)
  createdAt DateTime @default(now())
  
  @@map("email_notifications")
}

enum UserType {
  BUYER
  SELLER
}